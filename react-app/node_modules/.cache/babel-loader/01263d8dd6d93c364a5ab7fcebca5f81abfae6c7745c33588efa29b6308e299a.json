{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Genres.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnimeTable from \"./AnimeTable\";\nimport AnimeRow from \"./AnimeRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Genres({\n  title\n}) {\n  _s();\n  const {\n    popularAnime,\n    upcomingAnime,\n    airingAnime,\n    winterAnime,\n    summerAnime,\n    springAnime,\n    fallAnime,\n    loading\n  } = useGlobalContext();\n  /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow\",\n      children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(AnimeRow, {\n          title: 'Top 10' + title + ' Hit',\n          animes: popularAnime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AnimeTable, {\n          title: title,\n          animes: popularAnime\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n_s(Genres, \"FtZAiSsfFmwuve9UVP3S2qLKASo=\", true);\n_c = Genres;\nexport default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useState","useEffect","AnimeTable","AnimeRow","jsxDEV","_jsxDEV","Fragment","_Fragment","Genres","title","_s","popularAnime","upcomingAnime","airingAnime","winterAnime","summerAnime","springAnime","fallAnime","loading","useGlobalContext","children","className","fileName","_jsxFileName","lineNumber","columnNumber","animes","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Genres.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport AnimeRow from \"./AnimeRow\";\r\n\r\n\r\nfunction Genres({title}) {\r\n    const {\r\n        popularAnime,\r\n        upcomingAnime,\r\n        airingAnime,\r\n        winterAnime,\r\n        summerAnime,\r\n        springAnime,\r\n        fallAnime,\r\n        loading,\r\n      } = useGlobalContext();\r\n\r\n\r\n  <>\r\n    <div className=\"container--animeRow\">\r\n      {loading ? (\r\n        <p>Loading...</p>\r\n      ) : (\r\n        <>\r\n          <AnimeRow title={'Top 10' +title + ' Hit'} animes={popularAnime} />\r\n          <AnimeTable title={title} animes={popularAnime} />\r\n        </>\r\n      )}\r\n    </div>\r\n  </>\r\n} \r\n\r\nexport default Genres;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGlC,SAASC,MAAMA,CAAC;EAACC;AAAK,CAAC,EAAE;EAAAC,EAAA;EACrB,MAAM;IACFC,YAAY;IACZC,aAAa;IACbC,WAAW;IACXC,WAAW;IACXC,WAAW;IACXC,WAAW;IACXC,SAAS;IACTC;EACF,CAAC,GAAGC,gBAAgB,CAAC,CAAC;EAG1B,aAAAd,OAAA,CAAAE,SAAA;IAAAa,QAAA,eACEf,OAAA;MAAKgB,SAAS,EAAC,qBAAqB;MAAAD,QAAA,EACjCF,OAAO,gBACNb,OAAA;QAAAe,QAAA,EAAG;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEjBpB,OAAA,CAAAE,SAAA;QAAAa,QAAA,gBACEf,OAAA,CAACF,QAAQ;UAACM,KAAK,EAAE,QAAQ,GAAEA,KAAK,GAAG,MAAO;UAACiB,MAAM,EAAEf;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACnEpB,OAAA,CAACH,UAAU;UAACO,KAAK,EAAEA,KAAM;UAACiB,MAAM,EAAEf;QAAa;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA,eAClD;IACH;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC,gBACN,CAAC;AACL;AAACf,EAAA,CAzBQF,MAAM;AAAAmB,EAAA,GAANnB,MAAM;AA2Bf,eAAeA,MAAM;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}