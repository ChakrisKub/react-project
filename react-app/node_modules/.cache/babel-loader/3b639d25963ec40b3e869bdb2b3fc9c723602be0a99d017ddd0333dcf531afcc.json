{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = \"https://api.jikan.moe/v4/\";\nfunction AnimeRow({\n  title,\n  fetchUrl\n}) {\n  _s();\n  const [animes, setAnimes] = useState([]);\n  const animeRowRef = useRef(null);\n  const imagesPerScroll = 6;\n  const itemWidth = 300;\n  useEffect(() => {\n    async function fetchAnimeData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data);\n      setAnimes(request.data);\n      console.log(animes);\n      return request;\n    }\n    fetchAnimeData();\n  }, [fetchUrl]);\n  useEffect(() => {\n    con;\n    console.log(animes); // This will show the updated state\n  }, [animes]);\n  const scrollLeft = () => {\n    console.log(\"left\");\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll - imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  const scrollRight = () => {\n    console.log(\"right\");\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll + imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow--anime\",\n      ref: animeRowRef,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-left\",\n        onClick: scrollLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Anime \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container--animeRow--anime--list\",\n        children: animes.length > 0 ? animes.map(anime => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemes\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: anime.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${baseURL}${anime.images.jpg.large_image_url}`,\n              alt: anime.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, anime.mal_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Anime List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-right\",\n        onClick: scrollRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AnimeRow, \"Q92mfrVZIktZ5nBYhLEIXVwRdNs=\");\n_c = AnimeRow;\nAnimeRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired\n};\nexport default AnimeRow;\n\n// function AnimeRow({ title, data }) {\n//   const animeRowRef = useRef(null);\n//   const imagesPerScroll = 6;\n//   const itemWidth = 300;\n\n//   /*useEffect(() => {\n//     const options = {\n//       method: \"GET\",\n//       url: \"https://anime-db.p.rapidapi.com/anime\",\n//       params: {\n//         page: \"1\",\n//         size: \"10\",\n//         sortBy: \"ranking\",\n//         sortOrder: \"asc\",\n//       },\n//       headers: {\n//         \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\n//         \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\n//       },\n//     };\n\n//     async function getAnimes() {\n//       const animes = await axios.request(options);\n//       console.log(animes.data);\n//       setImages(animes.data.data);\n//     }\n//     getAnimes();\n//   }, []);\n// */\n// useEffect(() => {\n//   if (animeRowRef.current) {\n//     console.log(\"Container width:\", animeRowRef.current.offsetWidth);\n//     const itemElement = animeRowRef.current.querySelector(\".itemes\");\n//     if (itemElement) {\n//       console.log(\"Item width:\", itemElement.offsetWidth);\n//     }\n//   }\n// }, []);\n\n//   const scrollLeft = () => {\n//     console.log('left');\n//     const currentScroll = animeRowRef.current.scrollLeft;\n//     animeRowRef.current.scrollTo({\n//       left: currentScroll - imagesPerScroll * itemWidth,\n//       behavior: \"smooth\",\n//     });\n//   };\n\n//   const scrollRight = () => {\n//     console.log('right');\n//     const currentScroll = animeRowRef.current.scrollLeft;\n//     animeRowRef.current.scrollTo({\n//       left: currentScroll + imagesPerScroll * itemWidth,\n//       behavior: \"smooth\",\n//     });\n//   };\n\n//   return (\n//     <>\n//       <div className=\"container--animeRow--anime\" ref={animeRowRef}>\n//         <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\n//         <h1>Anime {title}</h1>\n//         <div className=\"container--animeRow--anime--list\">\n//           {data.length > 0 ? (\n//             data.map((anime, index) => (\n//               <div key={index} className=\"itemes\">\n//                 <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n//                   <img src={anime.image} alt={`Anime ${index}`} />\n//                   console.log(anime.id);\n//                 </a>\n//               </div>\n//             ))\n//           ) : (\n//             <p>Loading Anime List...</p>\n//           )}\n//         </div>\n//         <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\n//       </div>\n//     </>\n//   );\n// }\n\n// AnimeRow.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   data: PropTypes.array.isRequired,\n// };\n\n// export default AnimeRow;\nvar _c;\n$RefreshReg$(_c, \"AnimeRow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","baseURL","AnimeRow","title","fetchUrl","_s","animes","setAnimes","animeRowRef","imagesPerScroll","itemWidth","fetchAnimeData","request","get","console","log","data","con","scrollLeft","currentScroll","current","scrollTo","left","behavior","scrollRight","children","className","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","anime","href","target","rel","src","images","jpg","large_image_url","alt","mal_id","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeRow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"../axios\";\r\n\r\nconst baseURL = \"https://api.jikan.moe/v4/\";\r\n\r\nfunction AnimeRow({ title, fetchUrl }) {\r\n  const [animes, setAnimes] = useState([]);\r\n  const animeRowRef = useRef(null);\r\n  const imagesPerScroll = 6;\r\n  const itemWidth = 300;\r\n\r\n  useEffect(() => {\r\n    async function fetchAnimeData() {\r\n      const request = await axios.get(fetchUrl);\r\n      console.log(request.data);\r\n      setAnimes(request.data);\r\n      console.log(animes);\r\n      return request;\r\n    }\r\n    fetchAnimeData();\r\n  }, [fetchUrl]);\r\n\r\n  useEffect(() => {\r\n    con\r\n    console.log(animes); // This will show the updated state\r\n  }, [animes]);\r\n  \r\n\r\n  const scrollLeft = () => {\r\n    console.log(\"left\");\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll - imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    console.log(\"right\");\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll + imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container--animeRow--anime\" ref={animeRowRef}>\r\n        <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\r\n        <h1>Anime {title}</h1>\r\n        <div className=\"container--animeRow--anime--list\">\r\n          {animes.length > 0 ? (\r\n            animes.map((anime) => (\r\n              <div className=\"itemes\" key={anime.mal_id}>\r\n                <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <p>{anime.title}</p>\r\n                  <img\r\n                    src={`${baseURL}${anime.images.jpg.large_image_url}`}\r\n                    alt={anime.title}\r\n                  />\r\n                </a>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading Anime List...</p>\r\n          )}\r\n        </div>\r\n\r\n        <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nAnimeRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  fetchUrl: PropTypes.string.isRequired,\r\n};\r\nexport default AnimeRow;\r\n\r\n// function AnimeRow({ title, data }) {\r\n//   const animeRowRef = useRef(null);\r\n//   const imagesPerScroll = 6;\r\n//   const itemWidth = 300;\r\n\r\n//   /*useEffect(() => {\r\n//     const options = {\r\n//       method: \"GET\",\r\n//       url: \"https://anime-db.p.rapidapi.com/anime\",\r\n//       params: {\r\n//         page: \"1\",\r\n//         size: \"10\",\r\n//         sortBy: \"ranking\",\r\n//         sortOrder: \"asc\",\r\n//       },\r\n//       headers: {\r\n//         \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n//         \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n//       },\r\n//     };\r\n\r\n//     async function getAnimes() {\r\n//       const animes = await axios.request(options);\r\n//       console.log(animes.data);\r\n//       setImages(animes.data.data);\r\n//     }\r\n//     getAnimes();\r\n//   }, []);\r\n// */\r\n// useEffect(() => {\r\n//   if (animeRowRef.current) {\r\n//     console.log(\"Container width:\", animeRowRef.current.offsetWidth);\r\n//     const itemElement = animeRowRef.current.querySelector(\".itemes\");\r\n//     if (itemElement) {\r\n//       console.log(\"Item width:\", itemElement.offsetWidth);\r\n//     }\r\n//   }\r\n// }, []);\r\n\r\n//   const scrollLeft = () => {\r\n//     console.log('left');\r\n//     const currentScroll = animeRowRef.current.scrollLeft;\r\n//     animeRowRef.current.scrollTo({\r\n//       left: currentScroll - imagesPerScroll * itemWidth,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   };\r\n\r\n//   const scrollRight = () => {\r\n//     console.log('right');\r\n//     const currentScroll = animeRowRef.current.scrollLeft;\r\n//     animeRowRef.current.scrollTo({\r\n//       left: currentScroll + imagesPerScroll * itemWidth,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"container--animeRow--anime\" ref={animeRowRef}>\r\n//         <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\r\n//         <h1>Anime {title}</h1>\r\n//         <div className=\"container--animeRow--anime--list\">\r\n//           {data.length > 0 ? (\r\n//             data.map((anime, index) => (\r\n//               <div key={index} className=\"itemes\">\r\n//                 <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                   <img src={anime.image} alt={`Anime ${index}`} />\r\n//                   console.log(anime.id);\r\n//                 </a>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <p>Loading Anime List...</p>\r\n//           )}\r\n//         </div>\r\n//         <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// AnimeRow.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   data: PropTypes.array.isRequired,\r\n// };\r\n\r\n// export default AnimeRow;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,SAAS,MAAM,YAAY;AAClC,OAAOC,KAAK,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE7B,MAAMC,OAAO,GAAG,2BAA2B;AAE3C,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAMgB,WAAW,GAAGd,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMe,eAAe,GAAG,CAAC;EACzB,MAAMC,SAAS,GAAG,GAAG;EAErBjB,SAAS,CAAC,MAAM;IACd,eAAekB,cAAcA,CAAA,EAAG;MAC9B,MAAMC,OAAO,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAACT,QAAQ,CAAC;MACzCU,OAAO,CAACC,GAAG,CAACH,OAAO,CAACI,IAAI,CAAC;MACzBT,SAAS,CAACK,OAAO,CAACI,IAAI,CAAC;MACvBF,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC;MACnB,OAAOM,OAAO;IAChB;IACAD,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACP,QAAQ,CAAC,CAAC;EAEdX,SAAS,CAAC,MAAM;IACdwB,GAAG;IACHH,OAAO,CAACC,GAAG,CAACT,MAAM,CAAC,CAAC,CAAC;EACvB,CAAC,EAAE,CAACA,MAAM,CAAC,CAAC;EAGZ,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvBJ,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;IACnB,MAAMI,aAAa,GAAGX,WAAW,CAACY,OAAO,CAACF,UAAU;IACpDV,WAAW,CAACY,OAAO,CAACC,QAAQ,CAAC;MAC3BC,IAAI,EAAEH,aAAa,GAAGV,eAAe,GAAGC,SAAS;MACjDa,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;IACxBV,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;IACpB,MAAMI,aAAa,GAAGX,WAAW,CAACY,OAAO,CAACF,UAAU;IACpDV,WAAW,CAACY,OAAO,CAACC,QAAQ,CAAC;MAC3BC,IAAI,EAAEH,aAAa,GAAGV,eAAe,GAAGC,SAAS;MACjDa,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC;EAED,oBACEzB,OAAA,CAAAE,SAAA;IAAAyB,QAAA,eACE3B,OAAA;MAAK4B,SAAS,EAAC,4BAA4B;MAACC,GAAG,EAAEnB,WAAY;MAAAiB,QAAA,gBAC3D3B,OAAA;QAAG4B,SAAS,EAAC,wBAAwB;QAACE,OAAO,EAAEV;MAAW;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC/DlC,OAAA;QAAA2B,QAAA,GAAI,QAAM,EAACtB,KAAK;MAAA;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACtBlC,OAAA;QAAK4B,SAAS,EAAC,kCAAkC;QAAAD,QAAA,EAC9CnB,MAAM,CAAC2B,MAAM,GAAG,CAAC,GAChB3B,MAAM,CAAC4B,GAAG,CAAEC,KAAK,iBACfrC,OAAA;UAAK4B,SAAS,EAAC,QAAQ;UAAAD,QAAA,eACrB3B,OAAA;YAAGsC,IAAI,EAAC,GAAG;YAACC,MAAM,EAAC,QAAQ;YAACC,GAAG,EAAC,qBAAqB;YAAAb,QAAA,gBACnD3B,OAAA;cAAA2B,QAAA,EAAIU,KAAK,CAAChC;YAAK;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eACpBlC,OAAA;cACEyC,GAAG,EAAG,GAAEtC,OAAQ,GAAEkC,KAAK,CAACK,MAAM,CAACC,GAAG,CAACC,eAAgB,EAAE;cACrDC,GAAG,EAAER,KAAK,CAAChC;YAAM;cAAA0B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAClB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACD;QAAC,GAPuBG,KAAK,CAACS,MAAM;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAQpC,CACN,CAAC,gBAEFlC,OAAA;UAAA2B,QAAA,EAAG;QAAqB;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG;MAC5B;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC,eAENlC,OAAA;QAAG4B,SAAS,EAAC,yBAAyB;QAACE,OAAO,EAAEJ;MAAY;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9D;EAAC,gBACN,CAAC;AAEP;AAAC3B,EAAA,CApEQH,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAqEjBA,QAAQ,CAAC4C,SAAS,GAAG;EACnB3C,KAAK,EAAER,SAAS,CAACoD,MAAM,CAACC,UAAU;EAClC5C,QAAQ,EAAET,SAAS,CAACoD,MAAM,CAACC;AAC7B,CAAC;AACD,eAAe9C,QAAQ;;AAEvB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2C,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}