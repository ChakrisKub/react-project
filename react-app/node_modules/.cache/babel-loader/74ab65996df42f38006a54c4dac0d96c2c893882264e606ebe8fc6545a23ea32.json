{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"../axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst baseURL = 'https://api.jikan.moe/v4/';\nfunction AnimeRow({\n  title,\n  fetchUrl\n}) {\n  _s();\n  const [animes, setAnimes] = useState([]);\n  const animeRowRef = useRef(null);\n  const imagesPerScroll = 6;\n  const itemWidth = 300;\n  useEffect(() => {\n    async function fetchAnimeData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data);\n      setAnimes(request.data);\n      return request;\n    }\n    fetchAnimeData();\n  }, [fetchUrl]);\n  const scrollLeft = () => {\n    console.log(\"left\");\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll - imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  const scrollRight = () => {\n    console.log(\"right\");\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll + imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow--anime--list\",\n      children: animes.length > 0 ? animes.map(anime => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemes\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: anime.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: `${baseURL}${anime.images.jpg.large_image_url}`,\n            alt: anime.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 9\n        }, this)\n      }, anime.mal_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Anime List...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AnimeRow, \"mwCIAdW2qWpRCCjHcZKoIB1SwbY=\");\n_c = AnimeRow;\nAnimeRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired\n};\nexport default AnimeRow;\n\n// function AnimeRow({ title, data }) {\n//   const animeRowRef = useRef(null);\n//   const imagesPerScroll = 6;\n//   const itemWidth = 300;\n\n//   /*useEffect(() => {\n//     const options = {\n//       method: \"GET\",\n//       url: \"https://anime-db.p.rapidapi.com/anime\",\n//       params: {\n//         page: \"1\",\n//         size: \"10\",\n//         sortBy: \"ranking\",\n//         sortOrder: \"asc\",\n//       },\n//       headers: {\n//         \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\n//         \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\n//       },\n//     };\n\n//     async function getAnimes() {\n//       const animes = await axios.request(options);\n//       console.log(animes.data);\n//       setImages(animes.data.data);\n//     }\n//     getAnimes();\n//   }, []);\n// */\n// useEffect(() => {\n//   if (animeRowRef.current) {\n//     console.log(\"Container width:\", animeRowRef.current.offsetWidth);\n//     const itemElement = animeRowRef.current.querySelector(\".itemes\");\n//     if (itemElement) {\n//       console.log(\"Item width:\", itemElement.offsetWidth);\n//     }\n//   }\n// }, []);\n\n//   const scrollLeft = () => {\n//     console.log('left');\n//     const currentScroll = animeRowRef.current.scrollLeft;\n//     animeRowRef.current.scrollTo({\n//       left: currentScroll - imagesPerScroll * itemWidth,\n//       behavior: \"smooth\",\n//     });\n//   };\n\n//   const scrollRight = () => {\n//     console.log('right');\n//     const currentScroll = animeRowRef.current.scrollLeft;\n//     animeRowRef.current.scrollTo({\n//       left: currentScroll + imagesPerScroll * itemWidth,\n//       behavior: \"smooth\",\n//     });\n//   };\n\n//   return (\n//     <>\n//       <div className=\"container--animeRow--anime\" ref={animeRowRef}>\n//         <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\n//         <h1>Anime {title}</h1>\n//         <div className=\"container--animeRow--anime--list\">\n//           {data.length > 0 ? (\n//             data.map((anime, index) => (\n//               <div key={index} className=\"itemes\">\n//                 <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\n//                   <img src={anime.image} alt={`Anime ${index}`} />\n//                   console.log(anime.id);\n//                 </a>\n//               </div>\n//             ))\n//           ) : (\n//             <p>Loading Anime List...</p>\n//           )}\n//         </div>\n//         <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\n//       </div>\n//     </>\n//   );\n// }\n\n// AnimeRow.propTypes = {\n//   title: PropTypes.string.isRequired,\n//   data: PropTypes.array.isRequired,\n// };\n\n// export default AnimeRow;\nvar _c;\n$RefreshReg$(_c, \"AnimeRow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","baseURL","AnimeRow","title","fetchUrl","_s","animes","setAnimes","animeRowRef","imagesPerScroll","itemWidth","fetchAnimeData","request","get","console","log","data","scrollLeft","currentScroll","current","scrollTo","left","behavior","scrollRight","children","className","length","map","anime","href","target","rel","fileName","_jsxFileName","lineNumber","columnNumber","src","images","jpg","large_image_url","alt","mal_id","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeRow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"../axios\";\r\n\r\nconst baseURL = 'https://api.jikan.moe/v4/';\r\n\r\nfunction AnimeRow({ title, fetchUrl }) {\r\n  const [animes, setAnimes] = useState([]);\r\n  const animeRowRef = useRef(null);\r\n  const imagesPerScroll = 6;\r\n  const itemWidth = 300;\r\n\r\n  useEffect(() => {\r\n    async function fetchAnimeData() {\r\n      const request = await axios.get(fetchUrl);\r\n      console.log(request.data);\r\n      setAnimes(request.data);\r\n      return request;\r\n    }\r\n    fetchAnimeData();\r\n  }, [fetchUrl]);\r\n\r\n  const scrollLeft = () => {\r\n    console.log(\"left\");\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll - imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    console.log(\"right\");\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll + imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container--animeRow--anime--list\">\r\n  {animes.length > 0 ? (\r\n    animes.map((anime) => (\r\n      <div className=\"itemes\" key={anime.mal_id}>\r\n        <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n          <p>{anime.title}</p>\r\n          <img\r\n            src={`${baseURL}${anime.images.jpg.large_image_url}`}\r\n            alt={anime.title}\r\n          />\r\n        </a>\r\n      </div>\r\n    ))\r\n  ) : (\r\n    <p>Loading Anime List...</p>\r\n  )}\r\n</div>\r\n\r\n    </>\r\n  );\r\n}\r\nAnimeRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  fetchUrl: PropTypes.string.isRequired,\r\n};\r\nexport default AnimeRow;\r\n\r\n// function AnimeRow({ title, data }) {\r\n//   const animeRowRef = useRef(null);\r\n//   const imagesPerScroll = 6;\r\n//   const itemWidth = 300;\r\n\r\n//   /*useEffect(() => {\r\n//     const options = {\r\n//       method: \"GET\",\r\n//       url: \"https://anime-db.p.rapidapi.com/anime\",\r\n//       params: {\r\n//         page: \"1\",\r\n//         size: \"10\",\r\n//         sortBy: \"ranking\",\r\n//         sortOrder: \"asc\",\r\n//       },\r\n//       headers: {\r\n//         \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n//         \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n//       },\r\n//     };\r\n\r\n//     async function getAnimes() {\r\n//       const animes = await axios.request(options);\r\n//       console.log(animes.data);\r\n//       setImages(animes.data.data);\r\n//     }\r\n//     getAnimes();\r\n//   }, []);\r\n// */\r\n// useEffect(() => {\r\n//   if (animeRowRef.current) {\r\n//     console.log(\"Container width:\", animeRowRef.current.offsetWidth);\r\n//     const itemElement = animeRowRef.current.querySelector(\".itemes\");\r\n//     if (itemElement) {\r\n//       console.log(\"Item width:\", itemElement.offsetWidth);\r\n//     }\r\n//   }\r\n// }, []);\r\n\r\n//   const scrollLeft = () => {\r\n//     console.log('left');\r\n//     const currentScroll = animeRowRef.current.scrollLeft;\r\n//     animeRowRef.current.scrollTo({\r\n//       left: currentScroll - imagesPerScroll * itemWidth,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   };\r\n\r\n//   const scrollRight = () => {\r\n//     console.log('right');\r\n//     const currentScroll = animeRowRef.current.scrollLeft;\r\n//     animeRowRef.current.scrollTo({\r\n//       left: currentScroll + imagesPerScroll * itemWidth,\r\n//       behavior: \"smooth\",\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <>\r\n//       <div className=\"container--animeRow--anime\" ref={animeRowRef}>\r\n//         <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\r\n//         <h1>Anime {title}</h1>\r\n//         <div className=\"container--animeRow--anime--list\">\r\n//           {data.length > 0 ? (\r\n//             data.map((anime, index) => (\r\n//               <div key={index} className=\"itemes\">\r\n//                 <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                   <img src={anime.image} alt={`Anime ${index}`} />\r\n//                   console.log(anime.id);\r\n//                 </a>\r\n//               </div>\r\n//             ))\r\n//           ) : (\r\n//             <p>Loading Anime List...</p>\r\n//           )}\r\n//         </div>\r\n//         <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// }\r\n\r\n// AnimeRow.propTypes = {\r\n//   title: PropTypes.string.isRequired,\r\n//   data: PropTypes.array.isRequired,\r\n// };\r\n\r\n// export default AnimeRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}