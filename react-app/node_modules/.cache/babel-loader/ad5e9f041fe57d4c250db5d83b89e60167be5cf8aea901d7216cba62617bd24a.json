{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\GenresC.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport AnimeTable from \"./AnimeTable\";\nimport AnimeRow from \"./AnimeRow\";\nimport { useGlobalContext } from \"../context/global\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Genres({\n  selectedGenre\n}) {\n  _s();\n  const {\n    nowAnime,\n    loading\n  } = useGlobalContext();\n  const filteredAnimes = nowAnime.filter(anime => anime.genres.some(animeGenres => animeGenres.name === selectedGenre));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container--animeRow\",\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(AnimeRow, {\n        title: `Top 10 ${selectedGenre} Hit`,\n        animes: filteredAnimes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(AnimeTable, {\n        title: selectedGenre,\n        animes: filteredAnimes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n}\n_s(Genres, \"2hDTG+3JMODWFSMX0YPYQ5478YQ=\", false, function () {\n  return [useGlobalContext];\n});\n_c = Genres;\nexport default Genres;\n\n// import { useParams } from 'react-router-dom';\n\n// function Genres() {\n//   const { genre } = useParams();\n//   const { nowAnime, loading } = useGlobalContext();\n\n//   const filteredAnimes = nowAnime.filter(anime =>\n//     anime.genres.some(genreObj => genreObj.name === genre)\n//   );\n\n//   return (\n//     <div className=\"container--animeRow\">\n//       {loading ? (\n//         <p>Loading...</p>\n//       ) : (\n//         <>\n//           <AnimeRow title={`Top 10 ${genre} Hit`} animes={filteredAnimes} />\n//           <AnimeTable title={genre} animes={filteredAnimes} />\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default Genres;\nvar _c;\n$RefreshReg$(_c, \"Genres\");","map":{"version":3,"names":["React","useEffect","useState","AnimeTable","AnimeRow","useGlobalContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Genres","selectedGenre","_s","nowAnime","loading","filteredAnimes","filter","anime","genres","some","animeGenres","name","className","children","fileName","_jsxFileName","lineNumber","columnNumber","title","animes","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/GenresC.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport { useGlobalContext } from \"../context/global\";\r\n\r\n\r\nfunction Genres({ selectedGenre }) {\r\n    const { nowAnime, loading } = useGlobalContext();\r\n  \r\n    const filteredAnimes = nowAnime.filter(anime =>\r\n      anime.genres.some(animeGenres => animeGenres.name === selectedGenre)\r\n    );\r\n  \r\n    return (\r\n      <div className=\"container--animeRow\">\r\n        {loading ? (\r\n          <p>Loading...</p>\r\n        ) : (\r\n          <>\r\n            <AnimeRow title={`Top 10 ${selectedGenre} Hit`} animes={filteredAnimes} />\r\n            <AnimeTable title={selectedGenre} animes={filteredAnimes} />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Genres;\r\n\r\n\r\n// import { useParams } from 'react-router-dom';\r\n\r\n// function Genres() {\r\n//   const { genre } = useParams();\r\n//   const { nowAnime, loading } = useGlobalContext();\r\n\r\n//   const filteredAnimes = nowAnime.filter(anime =>\r\n//     anime.genres.some(genreObj => genreObj.name === genre)\r\n//   );\r\n\r\n//   return (\r\n//     <div className=\"container--animeRow\">\r\n//       {loading ? (\r\n//         <p>Loading...</p>\r\n//       ) : (\r\n//         <>\r\n//           <AnimeRow title={`Top 10 ${genre} Hit`} animes={filteredAnimes} />\r\n//           <AnimeTable title={genre} animes={filteredAnimes} />\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default Genres;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,gBAAgB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGrD,SAASC,MAAMA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EAC/B,MAAM;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGT,gBAAgB,CAAC,CAAC;EAEhD,MAAMU,cAAc,GAAGF,QAAQ,CAACG,MAAM,CAACC,KAAK,IAC1CA,KAAK,CAACC,MAAM,CAACC,IAAI,CAACC,WAAW,IAAIA,WAAW,CAACC,IAAI,KAAKV,aAAa,CACrE,CAAC;EAED,oBACEJ,OAAA;IAAKe,SAAS,EAAC,qBAAqB;IAAAC,QAAA,EACjCT,OAAO,gBACNP,OAAA;MAAAgB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEjBpB,OAAA,CAAAE,SAAA;MAAAc,QAAA,gBACEhB,OAAA,CAACH,QAAQ;QAACwB,KAAK,EAAG,UAASjB,aAAc,MAAM;QAACkB,MAAM,EAAEd;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC1EpB,OAAA,CAACJ,UAAU;QAACyB,KAAK,EAAEjB,aAAc;QAACkB,MAAM,EAAEd;MAAe;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC5D;EACH;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACf,EAAA,CAnBMF,MAAM;EAAA,QACmBL,gBAAgB;AAAA;AAAAyB,EAAA,GADzCpB,MAAM;AAqBb,eAAeA,MAAM;;AAGvB;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}