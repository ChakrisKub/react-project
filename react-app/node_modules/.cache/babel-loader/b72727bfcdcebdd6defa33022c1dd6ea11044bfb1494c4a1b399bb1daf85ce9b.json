{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport axios from \"../axios\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimeTable({\n  title,\n  fetchUrl,\n  className\n}) {\n  _s();\n  const [animes, setAnimes] = useState([]);\n  useEffect(() => {\n    async function fetchAnimeData() {\n      const request = await axios.get(fetchUrl);\n      console.log(request.data);\n      setAnimes(request.data.data);\n      console.log(animes);\n      return request;\n    }\n    fetchAnimeData();\n  }, [fetchUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container--animeRow--anime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Anime \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container--animeRow--anime--all--list\",\n        children: animes.length > 0 ? animes.map(anime => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemes\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/anime-details/${anime.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: anime.images.jpg.large_image_url,\n              alt: anime.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 17\n          }, this)\n        }, anime.mal_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Anime List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimeTable, \"9/Jd1XsWNDZ6DyYLV7cE5Cckuk8=\");\n_c = AnimeTable;\nAnimeTable.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\nexport default styled(AnimeTable)`\n  .container--animeRow--anime {\n    max-width: 2200px;\n    background: rgb(0, 0, 0);\n    width: 100%;\n    position: relative;\n  }\n  .container--animeRow--anime--all--list {\n    display: grid;\n    grid-auto-flow: row;\n    grid-template-columns: repeat(auto-fill, minmax(calc(100% / 6), 1fr));\n  }\n\n  .container--animeRow--anime--all--list .itemes {\n    height: 340px;\n    cursor: pointer;\n    object-fit: cover;\n  }\n\n  .container--animeRow--anime--all--list .itemes img {\n    border-radius: 5px;\n    width: 100%;\n    height: 340px;\n    transform: scale(0.9);\n    transition: all ease 0.2s;\n    /* object-fit: cover;*/\n  }\n  .container--animeRow--anime--all--list .itemes img:hover {\n    transform: scale(1);\n  }\n  /*animerow all lis resposive*/\n  @media screen and (max-width: 1000px) {\n    .container--animeRow--anime--all--list {\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 4), 1fr));\n    }\n  }\n  @media screen and (max-width: 800px) {\n    .container--animeRow--anime--all--list {\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 3), 1fr));\n    }\n  }\n  @media screen and (max-width: 500px) {\n    .container--animeRow--anime--all--list {\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 2), 1fr));\n    }\n  }\n  @media screen and (max-width: 400px) {\n    .container--animeRow--anime--all--list {\n      grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\n    }\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"AnimeTable\");","map":{"version":3,"names":["React","useState","useEffect","PropTypes","axios","Link","styled","jsxDEV","_jsxDEV","AnimeTable","title","fetchUrl","className","_s","animes","setAnimes","fetchAnimeData","request","get","console","log","data","children","class","fileName","_jsxFileName","lineNumber","columnNumber","length","map","anime","to","id","src","images","jpg","large_image_url","alt","mal_id","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeTable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"../axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction AnimeTable({ title, fetchUrl, className }) {\r\n  const [animes, setAnimes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function fetchAnimeData() {\r\n      const request = await axios.get(fetchUrl);\r\n      console.log(request.data);\r\n      setAnimes(request.data.data);\r\n      console.log(animes);\r\n      return request;\r\n    }\r\n    fetchAnimeData();\r\n  }, [fetchUrl]);\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div class=\"container--animeRow--anime\">\r\n        <h1>Anime {title}</h1>\r\n        <div className=\"container--animeRow--anime--all--list\">\r\n          {animes.length > 0 ? (\r\n            animes.map((anime) => (\r\n              <div className=\"itemes\" key={anime.mal_id}>\r\n                <Link to={`/anime-details/${anime.id}`}>\r\n                  <img\r\n                    src={anime.images.jpg.large_image_url}\r\n                    alt={anime.title}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading Anime List...</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nAnimeTable.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  fetchUrl: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default styled(AnimeTable)`\r\n  .container--animeRow--anime {\r\n    max-width: 2200px;\r\n    background: rgb(0, 0, 0);\r\n    width: 100%;\r\n    position: relative;\r\n  }\r\n  .container--animeRow--anime--all--list {\r\n    display: grid;\r\n    grid-auto-flow: row;\r\n    grid-template-columns: repeat(auto-fill, minmax(calc(100% / 6), 1fr));\r\n  }\r\n\r\n  .container--animeRow--anime--all--list .itemes {\r\n    height: 340px;\r\n    cursor: pointer;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .container--animeRow--anime--all--list .itemes img {\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    height: 340px;\r\n    transform: scale(0.9);\r\n    transition: all ease 0.2s;\r\n    /* object-fit: cover;*/\r\n  }\r\n  .container--animeRow--anime--all--list .itemes img:hover {\r\n    transform: scale(1);\r\n  }\r\n  /*animerow all lis resposive*/\r\n  @media screen and (max-width: 1000px) {\r\n    .container--animeRow--anime--all--list {\r\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 4), 1fr));\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .container--animeRow--anime--all--list {\r\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 3), 1fr));\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .container--animeRow--anime--all--list {\r\n      grid-template-columns: repeat(auto-fill, minmax(calc(100% / 2), 1fr));\r\n    }\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    .container--animeRow--anime--all--list {\r\n      grid-template-columns: repeat(auto-fill, minmax(100%, 1fr));\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}