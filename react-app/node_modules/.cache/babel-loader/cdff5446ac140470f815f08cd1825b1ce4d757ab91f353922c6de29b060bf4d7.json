{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Home.js\";\nimport React, { useState, useEffect } from \"react\";\nimport AnimeRow from \"./AnimeRow\";\nimport requests from \"../request\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow\",\n      children: [/*#__PURE__*/_jsxDEV(AnimeRow, {\n        title: \"Top Hit\",\n        fetchUrl: requests.fetchTopAnime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(AnimeRow, {\n        title: \"Top TopAiring\",\n        fetchUrl: requests.fetchTopAiring\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = Home;\nexport default Home;\n\n/*{animeCategories.length > 0 ? (\r\n        animeCategories.map((category) => {\r\n          const filteredData = animeData.filter(anime => anime.genres.includes(category.params.genres));\r\n          return (\r\n            <AnimeRow\r\n              key={category.title}\r\n              title={category.title}\r\n              data={filteredData.slice(0, maxItemsPerRow)}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <p>Loading Anime...</p>\r\n      )}*/\n\n/* useEffect(() => {\r\n    async function getAnimes(title, params) {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          sortBy: \"ranking\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"8c1dd609c0msh55007741e312580p1be040jsn871593d54e0c\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n      console.log(options);\r\n\r\n      try {\r\n        const animes = await axios.request(options);\r\n        console.log(animes.data);\r\n        setAnimeData((prevData) => ({\r\n          ...prevData,\r\n          [title]: animes.data.data,\r\n        }));\r\n        console.log(animes.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching anime data:\", error);\r\n      }\r\n    }\r\n\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n      console.log(category.title, category.params);\r\n    });\r\n  }, []);*/\n\n/*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","AnimeRow","requests","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","children","className","title","fetchUrl","fetchTopAnime","fileName","_jsxFileName","lineNumber","columnNumber","fetchTopAiring","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport requests from \"../request\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <div className=\"container--animeRow\">\r\n      <AnimeRow title='Top Hit' fetchUrl={requests.fetchTopAnime} />\r\n      <AnimeRow title='Top TopAiring' fetchUrl={requests.fetchTopAiring} />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n\r\n/*{animeCategories.length > 0 ? (\r\n        animeCategories.map((category) => {\r\n          const filteredData = animeData.filter(anime => anime.genres.includes(category.params.genres));\r\n          return (\r\n            <AnimeRow\r\n              key={category.title}\r\n              title={category.title}\r\n              data={filteredData.slice(0, maxItemsPerRow)}\r\n            />\r\n          );\r\n        })\r\n      ) : (\r\n        <p>Loading Anime...</p>\r\n      )}*/\r\n\r\n/* useEffect(() => {\r\n    async function getAnimes(title, params) {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          sortBy: \"ranking\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"8c1dd609c0msh55007741e312580p1be040jsn871593d54e0c\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n      console.log(options);\r\n\r\n      try {\r\n        const animes = await axios.request(options);\r\n        console.log(animes.data);\r\n        setAnimeData((prevData) => ({\r\n          ...prevData,\r\n          [title]: animes.data.data,\r\n        }));\r\n        console.log(animes.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching anime data:\", error);\r\n      }\r\n    }\r\n\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n      console.log(category.title, category.params);\r\n    });\r\n  }, []);*/\r\n\r\n/*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAElC,SAASC,IAAIA,CAAA,EAAG;EACd,oBACEH,OAAA,CAAAE,SAAA;IAAAE,QAAA,eACEJ,OAAA;MAAKK,SAAS,EAAC,qBAAqB;MAAAD,QAAA,gBACpCJ,OAAA,CAACH,QAAQ;QAACS,KAAK,EAAC,SAAS;QAACC,QAAQ,EAAET,QAAQ,CAACU;MAAc;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC9DZ,OAAA,CAACH,QAAQ;QAACS,KAAK,EAAC,eAAe;QAACC,QAAQ,EAAET,QAAQ,CAACe;MAAe;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChE;EAAC,gBACN,CAAC;AAEP;AAACE,EAAA,GATQX,IAAI;AAUb,eAAeA,IAAI;;AAEnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAzBA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}