{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport axios from \"\";\n\n// const baseURL = \"https://api.jikan.moe/v4/\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AnimeRow({\n  title,\n  fetchUrl,\n  className\n}) {\n  _s();\n  const [animes, setAnimes] = useState([]);\n  const animeRowRef = useRef(null);\n  useEffect(() => {\n    async function fetchAnimeData() {\n      const request = await axios.get(fetchUrl);\n      setAnimes(request.data.data);\n      return request;\n    }\n    fetchAnimeData();\n  }, [fetchUrl]);\n  const sideScroll = (element, speed, step, viewportFactor) => {\n    let scrollAmount = 0;\n    const calculateDistance = () => {\n      const viewportWidth = window.innerWidth;\n      return viewportWidth * viewportFactor;\n    };\n    const slideTimer = setInterval(() => {\n      element.scrollLeft += step;\n      scrollAmount += Math.abs(step);\n      const distance = calculateDistance();\n      if (scrollAmount >= distance) {\n        clearInterval(slideTimer);\n      }\n    }, speed);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: className,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow--anime\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Anime \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container--animeRow--anime--list\",\n        ref: animeRowRef,\n        children: animes.length > 0 ? animes.map(anime => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemes\",\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: `/anime-details/${anime.id}`,\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: anime.images.jpg.large_image_url,\n              alt: anime.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, anime.mal_id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Anime List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-left\",\n        onClick: () => {\n          sideScroll(animeRowRef.current, 10, -10, 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-right\",\n        onClick: () => {\n          sideScroll(animeRowRef.current, 10, 10, 1);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \";\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(AnimeRow, \"mwCIAdW2qWpRCCjHcZKoIB1SwbY=\");\n_c = AnimeRow;\nAnimeRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  fetchUrl: PropTypes.string.isRequired,\n  className: PropTypes.string.isRequired\n};\nexport default styled(AnimeRow)`\n  .container--animeRow--anime {\n    max-width: 2200px;\n    background: rgb(0, 0, 0);\n    width: 100%;\n    position: relative;\n  }\n  .container--animeRow--anime--list {\n    display: grid;\n    grid-auto-flow: column;\n    grid-auto-columns: calc((100% / 6));\n    overflow: hidden;\n  }\n  .container--animeRow--anime--list .itemes {\n    height: 340px;\n    cursor: pointer;\n    object-fit: cover;\n  }\n  .container--animeRow--anime--list .itemes img {\n    border-radius: 5px;\n    width: 100%;\n    height: 340px;\n    transform: scale(0.9);\n    transition: all ease 0.2s;\n  }\n  .container--animeRow--anime--list .itemes img:hover {\n    transform: scale(1);\n  }\n  .container--animeRow--anime i {\n    color: #fff;\n    background: #f7a6b9;\n    height: 50px;\n    width: 50px;\n    text-align: center;\n    line-height: 50px;\n    border-radius: 50%;\n    cursor: pointer;\n    font-size: 1.2rem;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    box-shadow: 0 3px 6px rgb(0, 0, 0.5);\n    z-index: 1;\n  }\n\n  .container--animeRow--anime i:first-child {\n    left: -15px;\n  }\n  .container--animeRow--anime i:last-child {\n    right: -15px;\n  }\n\n  @media screen and (max-width: 1000px) {\n    .container--animeRow--anime--list {\n      grid-auto-columns: calc((100% / 4));\n    }\n  }\n  @media screen and (max-width: 800px) {\n    .container--animeRow--anime--list {\n      grid-auto-columns: calc((100% / 3));\n    }\n  }\n  @media screen and (max-width: 500px) {\n    .container--animeRow--anime--list {\n      grid-auto-columns: calc((100% / 2));\n    }\n  }\n  @media screen and (max-width: 400px) {\n    .container--animeRow--anime--list {\n      grid-auto-columns: 100%;\n    }\n  }\n`;\nvar _c;\n$RefreshReg$(_c, \"AnimeRow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","PropTypes","Link","styled","axios","jsxDEV","_jsxDEV","AnimeRow","title","fetchUrl","className","_s","animes","setAnimes","animeRowRef","fetchAnimeData","request","get","data","sideScroll","element","speed","step","viewportFactor","scrollAmount","calculateDistance","viewportWidth","window","innerWidth","slideTimer","setInterval","scrollLeft","Math","abs","distance","clearInterval","children","fileName","_jsxFileName","lineNumber","columnNumber","ref","length","map","anime","to","id","src","images","jpg","large_image_url","alt","mal_id","onClick","current","_c","propTypes","string","isRequired","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeRow.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport axios from \"\"\r\n\r\n// const baseURL = \"https://api.jikan.moe/v4/\";\r\n\r\nfunction AnimeRow({ title, fetchUrl, className }) {\r\n  const [animes, setAnimes] = useState([]);\r\n  const animeRowRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    async function fetchAnimeData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setAnimes(request.data.data);\r\n      return request;\r\n    }\r\n    fetchAnimeData();\r\n  }, [fetchUrl]);\r\n\r\n  const sideScroll = (element, speed, step, viewportFactor) => {\r\n    let scrollAmount = 0;\r\n    const calculateDistance = () => {\r\n      const viewportWidth = window.innerWidth;\r\n      return viewportWidth * viewportFactor;\r\n    };\r\n    const slideTimer = setInterval(() => {\r\n      element.scrollLeft += step;\r\n      scrollAmount += Math.abs(step);\r\n\r\n      const distance = calculateDistance();\r\n\r\n      if (scrollAmount >= distance) {\r\n        clearInterval(slideTimer);\r\n      }\r\n    }, speed);\r\n  };\r\n\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"container--animeRow--anime\">\r\n        <h1>Anime {title}</h1>\r\n        <div className=\"container--animeRow--anime--list\" ref={animeRowRef}>\r\n          {animes.length > 0 ? (\r\n            animes.map((anime) => (\r\n              <div className=\"itemes\" key={anime.mal_id}>\r\n                <Link to={`/anime-details/${anime.id}`}>\r\n                  <img\r\n                    src={anime.images.jpg.large_image_url}\r\n                    alt={anime.title}\r\n                  />\r\n                </Link>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading Anime List...</p>\r\n          )}\r\n        </div>\r\n\r\n        <i\r\n          className=\"fa-solid fa-angle-left\"\r\n          onClick={() => {\r\n            sideScroll(animeRowRef.current, 10, -10, 1);\r\n          }}\r\n        ></i>\r\n        <i\r\n          className=\"fa-solid fa-angle-right\"\r\n          onClick={() => {\r\n            sideScroll(animeRowRef.current, 10, 10, 1);\r\n          }}\r\n        ></i>\r\n      </div>\r\n      ;\r\n    </div>\r\n  );\r\n}\r\nAnimeRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  fetchUrl: PropTypes.string.isRequired,\r\n  className: PropTypes.string.isRequired\r\n};\r\n\r\nexport default styled(AnimeRow)`\r\n  .container--animeRow--anime {\r\n    max-width: 2200px;\r\n    background: rgb(0, 0, 0);\r\n    width: 100%;\r\n    position: relative;\r\n  }\r\n  .container--animeRow--anime--list {\r\n    display: grid;\r\n    grid-auto-flow: column;\r\n    grid-auto-columns: calc((100% / 6));\r\n    overflow: hidden;\r\n  }\r\n  .container--animeRow--anime--list .itemes {\r\n    height: 340px;\r\n    cursor: pointer;\r\n    object-fit: cover;\r\n  }\r\n  .container--animeRow--anime--list .itemes img {\r\n    border-radius: 5px;\r\n    width: 100%;\r\n    height: 340px;\r\n    transform: scale(0.9);\r\n    transition: all ease 0.2s;\r\n  }\r\n  .container--animeRow--anime--list .itemes img:hover {\r\n    transform: scale(1);\r\n  }\r\n  .container--animeRow--anime i {\r\n    color: #fff;\r\n    background: #f7a6b9;\r\n    height: 50px;\r\n    width: 50px;\r\n    text-align: center;\r\n    line-height: 50px;\r\n    border-radius: 50%;\r\n    cursor: pointer;\r\n    font-size: 1.2rem;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translateY(-50%);\r\n    box-shadow: 0 3px 6px rgb(0, 0, 0.5);\r\n    z-index: 1;\r\n  }\r\n\r\n  .container--animeRow--anime i:first-child {\r\n    left: -15px;\r\n  }\r\n  .container--animeRow--anime i:last-child {\r\n    right: -15px;\r\n  }\r\n\r\n  @media screen and (max-width: 1000px) {\r\n    .container--animeRow--anime--list {\r\n      grid-auto-columns: calc((100% / 4));\r\n    }\r\n  }\r\n  @media screen and (max-width: 800px) {\r\n    .container--animeRow--anime--list {\r\n      grid-auto-columns: calc((100% / 3));\r\n    }\r\n  }\r\n  @media screen and (max-width: 500px) {\r\n    .container--animeRow--anime--list {\r\n      grid-auto-columns: calc((100% / 2));\r\n    }\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    .container--animeRow--anime--list {\r\n      grid-auto-columns: 100%;\r\n    }\r\n  }\r\n`;"],"mappings":"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C;QAC5C;MAAE;QAAAjB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,KAER;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAC7B,EAAA,CApEQJ,QAAQ;AAAAgD,EAAA,GAARhD,QAAQ;AAqEjBA,QAAQ,CAACiD,SAAS,GAAG;EACnBhD,KAAK,EAAEP,SAAS,CAACwD,MAAM,CAACC,UAAU;EAClCjD,QAAQ,EAAER,SAAS,CAACwD,MAAM,CAACC,UAAU;EACrChD,SAAS,EAAET,SAAS,CAACwD,MAAM,CAACC;AAC9B,CAAC;AAED,eAAevD,MAAM,CAACI,QAAQ,CAAE;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAAC,IAAAgD,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}