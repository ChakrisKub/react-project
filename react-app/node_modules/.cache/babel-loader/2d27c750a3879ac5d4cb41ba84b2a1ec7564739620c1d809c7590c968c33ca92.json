{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnimeRow from \"./AnimeRow\";\nimport AnimeTable from \"./AnimeTable\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [animeCategories] = useState([{\n    title: \"Hot Hit\",\n    params: {\n      sortBy: \"ranking\",\n      sortOrder: \"asc\"\n    }\n  }, {\n    title: \"Winter Hit\",\n    params: {\n      search: \"Winter\",\n      sortBy: \"ranking\",\n      sortOrder: \"asc\"\n    }\n  }\n  /*{ title: \"Summer Hit\", params: { search: \"Summer\"} },\r\n  { title: \"Winter Hit\", params: { search: \"Winter\"} },\r\n  { title: \"Autumn Hit\", params: { search: \"Autumn\"} },\r\n  { title: \"Fall Hit\", params: { search: \"Fall\"} },\r\n  { title: \"Top picks\", params: { search: \"Fight\"} },*/]);\n\n  const [animeData, setAnimeData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      const newData = await Promise.all(animeCategories.map(async category => {\n        try {\n          const animes = await axios.request({\n            method: \"GET\",\n            url: \"https://anime-db.p.rapidapi.com/anime\",\n            params: {\n              page: \"1\",\n              size: \"10\",\n              ...category.params\n            },\n            headers: {\n              \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\n              \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\"\n            }\n          });\n          return {\n            title: category.title,\n            data: animes.data.data\n          };\n        } catch (error) {\n          console.error(\"Error fetching anime data:\", error);\n          return {\n            title: category.title,\n            data: []\n          };\n        }\n      }));\n      setAnimeData(newData);\n    };\n    fetchData();\n  }, [animeCategories]);\n\n  /* useEffect(() => {\r\n    async function getAnimes(title, params) {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n        try {\r\n        const animes = await axios.request(options);\r\n        console.log(animes.data);\r\n        setAnimeData(animes.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching anime data:\", error);\r\n        return [];\r\n      }\r\n    }\r\n      animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\n\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n      async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: ani.map(category => /*#__PURE__*/_jsxDEV(AnimeRow, {\n      title: category.title,\n      data: animeData\n    }, category.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Home, \"hZYVxpfJZ5O8opWJb2umfXFs5Ak=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","AnimeRow","AnimeTable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeCategories","title","params","sortBy","sortOrder","search","animeData","setAnimeData","fetchData","newData","Promise","all","map","category","animes","request","method","url","page","size","headers","data","error","console","children","ani","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport axios from \"axios\";\r\n\r\nfunction Home() {\r\n  const [animeCategories] = useState([\r\n    { title: \"Hot Hit\", params: { sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    {\r\n      title: \"Winter Hit\",\r\n      params: { search: \"Winter\", sortBy: \"ranking\", sortOrder: \"asc\" },\r\n    },\r\n    /*{ title: \"Summer Hit\", params: { search: \"Summer\"} },\r\n    { title: \"Winter Hit\", params: { search: \"Winter\"} },\r\n    { title: \"Autumn Hit\", params: { search: \"Autumn\"} },\r\n    { title: \"Fall Hit\", params: { search: \"Fall\"} },\r\n    { title: \"Top picks\", params: { search: \"Fight\"} },*/\r\n  ]);\r\n  const [animeData, setAnimeData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const newData = await Promise.all(\r\n        animeCategories.map(async (category) => {\r\n          try {\r\n            const animes = await axios.request({\r\n              method: \"GET\",\r\n              url: \"https://anime-db.p.rapidapi.com/anime\",\r\n              params: {\r\n                page: \"1\",\r\n                size: \"10\",\r\n                ...category.params,\r\n              },\r\n              headers: {\r\n                \"X-RapidAPI-Key\":\r\n                  \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n                \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n              },\r\n            });\r\n            return { title: category.title, data: animes.data.data };\r\n          } catch (error) {\r\n            console.error(\"Error fetching anime data:\", error);\r\n            return { title: category.title, data: [] };\r\n          }\r\n        })\r\n      );\r\n      setAnimeData(newData);\r\n    };\r\n\r\n    fetchData();\r\n  }, [animeCategories]);\r\n\r\n  /* useEffect(() => {\r\n    async function getAnimes(title, params) {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n      try {\r\n        const animes = await axios.request(options);\r\n        console.log(animes.data);\r\n        setAnimeData(animes.data.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching anime data:\", error);\r\n        return [];\r\n      }\r\n    }\r\n\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\r\n\r\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\r\n\r\n  return (\r\n    <>\r\n      {ani.map((category) => (\r\n        <AnimeRow\r\n          key={category.title}\r\n          title={category.title}\r\n          data={animeData}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}