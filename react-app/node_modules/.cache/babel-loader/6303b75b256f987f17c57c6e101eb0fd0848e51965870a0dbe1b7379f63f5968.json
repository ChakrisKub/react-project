{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnimeRow({\n  title,\n  data\n}) {\n  _s();\n  const animeRowRef = useRef(null);\n  const imagesPerScroll = 6;\n  const itemWidth = 300;\n\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\",\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n      async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setImages(animes.data.data);\r\n    }\r\n    getAnimes();\r\n  }, []);\r\n  */\n  const scrollLeft = () => {\n    console.log('left');\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll - imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  const scrollRight = () => {\n    console.log('right');\n    const currentScroll = animeRowRef.current.scrollLeft;\n    animeRowRef.current.scrollTo({\n      left: currentScroll + imagesPerScroll * itemWidth,\n      behavior: \"smooth\"\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container--animeRow--anime\",\n      ref: animeRowRef,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-left\",\n        onClick: scrollLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Anime \", title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container--animeRow--anime--list\",\n        children: data.length > 0 ? data.map((anime, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemes\",\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#\",\n            target: \"_blank\",\n            rel: \"noopener noreferrer\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: anime.image,\n              alt: `Anime ${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)\n        }, anime.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading Anime List...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fa-solid fa-angle-right\",\n        onClick: scrollRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AnimeRow, \"FkboLsRMhh/xjTm8TeQTPvoERiw=\");\n_c = AnimeRow;\nAnimeRow.propTypes = {\n  title: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default AnimeRow;\nvar _c;\n$RefreshReg$(_c, \"AnimeRow\");","map":{"version":3,"names":["React","useState","useRef","PropTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimeRow","title","data","_s","animeRowRef","imagesPerScroll","itemWidth","scrollLeft","console","log","currentScroll","current","scrollTo","left","behavior","scrollRight","children","className","ref","onClick","fileName","_jsxFileName","lineNumber","columnNumber","length","map","anime","index","href","target","rel","src","image","alt","id","_c","propTypes","string","isRequired","array","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeRow.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nfunction AnimeRow({ title, data }) {\r\n  const animeRowRef = useRef(null);\r\n  const imagesPerScroll = 6;\r\n  const itemWidth = 300;\r\n\r\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\",\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setImages(animes.data.data);\r\n    }\r\n    getAnimes();\r\n  }, []);\r\n*/\r\n  const scrollLeft = () => {\r\n    console.log('left');\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll - imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  const scrollRight = () => {\r\n    console.log('right');\r\n    const currentScroll = animeRowRef.current.scrollLeft;\r\n    animeRowRef.current.scrollTo({\r\n      left: currentScroll + imagesPerScroll * itemWidth,\r\n      behavior: \"smooth\",\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container--animeRow--anime\" ref={animeRowRef}>\r\n        <i className=\"fa-solid fa-angle-left\" onClick={scrollLeft}></i>\r\n        <h1>Anime {title}</h1>\r\n        <div className=\"container--animeRow--anime--list\">\r\n          {data.length > 0 ? (\r\n            data.map((anime, index) => (\r\n              <div key={anime.id} className=\"itemes\">\r\n                <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer\">\r\n                  <img src={anime.image} alt={`Anime ${index}`} />\r\n                </a>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>Loading Anime List...</p>\r\n          )}\r\n        </div>\r\n        <i className=\"fa-solid fa-angle-right\" onClick={scrollRight}></i>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nAnimeRow.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default AnimeRow;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}