{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnimeRow from \"./AnimeRow\";\nimport AnimeTable from \"./AnimeTable\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [animeData, setAnimeData] = useState([]);\n  const animeCategories = [{\n    title: \"Hot Hit\",\n    params: {\n      sortBy: \"ranking\",\n      sortOrder: \"asc\"\n    }\n  }, {\n    title: \"Trending\",\n    params: {\n      sortBy: \"trending\",\n      sortOrder: \"asc\"\n    }\n  }];\n  /*{ title: \"Summer Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Winter Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Autumn Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Top picks\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },*/\n\n  useEffect(() => {\n    const options = {\n      method: \"GET\",\n      url: \"https://anime-db.p.rapidapi.com/anime\",\n      params: {\n        page: \"1\",\n        size: \"10\"\n      },\n      headers: {\n        \"X-RapidAPI-Key\": \"8c1dd609c0msh55007741e312580p1be040jsn871593d54e0c\",\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\"\n      }\n    };\n    async function getAnimes() {\n      const animes = await axios.request(options);\n      console.log(animes.data);\n      setAnimeData(animes.data.data);\n    }\n    animeCategories.forEach(category => {\n      getAnimes(category.params);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: animeCategories.map(category => /*#__PURE__*/_jsxDEV(AnimeRow, {\n      title: category.title,\n      animeData: animeData\n    }, category.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Home, \"Ow/WlxbM8ZnH9CMn3HGskyD6Nlk=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","AnimeRow","AnimeTable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeData","setAnimeData","animeCategories","title","params","sortBy","sortOrder","options","method","url","page","size","headers","getAnimes","animes","request","console","log","data","forEach","category","children","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport axios from \"axios\";\r\n\r\nfunction Home() {\r\n  const [animeData, setAnimeData] = useState([]);\r\n  const animeCategories = [\r\n    { title: \"Hot Hit\", params: { sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Trending\", params: { sortBy: \"trending\", sortOrder: \"asc\" } },\r\n  ];\r\n  /*{ title: \"Summer Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Winter Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Autumn Hit\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },\r\n    { title: \"Top picks\", params: { sortBy: \"trending\", sortOrder: \"desc\" } },*/\r\n\r\n  useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"8c1dd609c0msh55007741e312580p1be040jsn871593d54e0c\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.params);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {animeCategories.map((category) => (\r\n        <AnimeRow\r\n          key={category.title}\r\n          title={category.title}\r\n          animeData={animeData}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;MAAEC,MAAM,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAM;EAAE,CAAC,EACrE;IAAEH,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;MAAEC,MAAM,EAAE,UAAU;MAAEC,SAAS,EAAE;IAAM;EAAE,CAAC,CACxE;EACD;AACF;AACA;AACA;;EAEEhB,SAAS,CAAC,MAAM;IACd,MAAMiB,OAAO,GAAG;MACdC,MAAM,EAAE,KAAK;MACbC,GAAG,EAAE,uCAAuC;MAC5CL,MAAM,EAAE;QACNM,IAAI,EAAE,GAAG;QACTC,IAAI,EAAE;MACR,CAAC;MACDC,OAAO,EAAE;QACP,gBAAgB,EAAE,oDAAoD;QACtE,iBAAiB,EAAE;MACrB;IACF,CAAC;IAED,eAAeC,SAASA,CAAA,EAAG;MACzB,MAAMC,MAAM,GAAG,MAAMrB,KAAK,CAACsB,OAAO,CAACR,OAAO,CAAC;MAC3CS,OAAO,CAACC,GAAG,CAACH,MAAM,CAACI,IAAI,CAAC;MACxBjB,YAAY,CAACa,MAAM,CAACI,IAAI,CAACA,IAAI,CAAC;IAChC;IAEAhB,eAAe,CAACiB,OAAO,CAAEC,QAAQ,IAAK;MACpCP,SAAS,CAACO,QAAQ,CAAChB,MAAM,CAAC;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACET,OAAA,CAAAE,SAAA;IAAAwB,QAAA,EACGnB,eAAe,CAACoB,GAAG,CAAEF,QAAQ,iBAC5BzB,OAAA,CAACJ,QAAQ;MAEPY,KAAK,EAAEiB,QAAQ,CAACjB,KAAM;MACtBH,SAAS,EAAEA;IAAU,GAFhBoB,QAAQ,CAACjB,KAAK;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB,CACF;EAAC,gBACF,CAAC;AAEP;AAAC3B,EAAA,CA/CQD,IAAI;AAAA6B,EAAA,GAAJ7B,IAAI;AAgDb,eAAeA,IAAI;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}