{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnimeRow from \"./AnimeRow\";\nimport AnimeTable from \"./AnimeTable\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [animeCategories] = useState([{\n    title: \"Hot Hit\",\n    params: {\n      genres: \"Award Winning\"\n    }\n  }, {\n    title: \"Fantasy Hit\",\n    params: {\n      genres: \"Fantasy\"\n    }\n  }, {\n    title: \"Action Hit\",\n    params: {\n      genres: \"Action\"\n    }\n  }\n  /*{ title: \"Action Hit\", params: { genres: \"Action\"} },\r\n  { title: \"Drama Hit\", params: { genres: \"Drama\"} },\r\n  { title: \"Comedy Hit\", params: { genres: \"Comedy\"} },\r\n  { title: \"Mystery Hit\", params: { genres: \"Mystery\"} },\r\n  { title: \"Top Boys Love picks\", params: { genres: \"Boys Love\"} },*/]);\n\n  const [animeData, setAnimeData] = useState([]);\n  useEffect(() => {\n    async function getAnimes(title, params) {\n      const options = {\n        method: \"GET\",\n        url: \"https://anime-db.p.rapidapi.com/anime\",\n        params: {\n          page: \"1\",\n          size: \"10\",\n          sortBy: \"ranking\",\n          ...params\n        },\n        headers: {\n          \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\"\n        }\n      };\n      try {\n        const animes = await axios.request(options);\n        console.log(animes.data);\n\n        // Update the animeData state for the corresponding category title\n        setAnimeData(prevData => ({\n          ...prevData,\n          [title]: animes.data.data\n        }));\n      } catch (error) {\n        console.error(\"Error fetching anime data:\", error);\n      }\n    }\n    animeCategories.forEach(category => {\n      getAnimes(category.title, category.params);\n      console.log(category.title, category.params);\n    });\n  }, []);\n\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n      async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: animeData.length > 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container--animeRow\",\n      children: animeCategories.map(category => /*#__PURE__*/_jsxDEV(AnimeRow, {\n        title: category.title,\n        data: animeData[category.title] || []\n      }, category.title, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading anime...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_s(Home, \"/dzUQTBo3kEExtmgiJJkzsSn1i4=\");\n_c = Home;\nexport default Home;\n\n/*\r\n{animeCategories.map((category) => (\r\n        <AnimeRow\r\n          key={category.title}\r\n          title={category.title}\r\n          data={animeData[category.title]|| []}\r\n        />\r\n      ))}\r\n*/\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","AnimeRow","AnimeTable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeCategories","title","params","genres","animeData","setAnimeData","getAnimes","options","method","url","page","size","sortBy","headers","animes","request","console","log","data","prevData","error","forEach","category","children","length","class","map","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport axios from \"axios\";\r\n\r\nfunction Home() {\r\n  const [animeCategories] = useState([\r\n    { title: \"Hot Hit\", params: { genres: \"Award Winning\" } },\r\n    { title: \"Fantasy Hit\", params: { genres: \"Fantasy\" } },\r\n    { title: \"Action Hit\", params: { genres: \"Action\" } },\r\n    /*{ title: \"Action Hit\", params: { genres: \"Action\"} },\r\n    { title: \"Drama Hit\", params: { genres: \"Drama\"} },\r\n    { title: \"Comedy Hit\", params: { genres: \"Comedy\"} },\r\n    { title: \"Mystery Hit\", params: { genres: \"Mystery\"} },\r\n    { title: \"Top Boys Love picks\", params: { genres: \"Boys Love\"} },*/\r\n  ]);\r\n  const [animeData, setAnimeData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    async function getAnimes(title, params) {\r\n      const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          sortBy: \"ranking\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\":\r\n            \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n      try {\r\n        const animes = await axios.request(options);\r\n        console.log(animes.data);\r\n\r\n        // Update the animeData state for the corresponding category title\r\n        setAnimeData((prevData) => ({\r\n          ...prevData,\r\n          [title]: animes.data.data,\r\n        }));\r\n      } catch (error) {\r\n        console.error(\"Error fetching anime data:\", error);\r\n      }\r\n    }\r\n\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n      console.log(category.title, category.params);\r\n    });\r\n  }, []);\r\n\r\n  /*useEffect(() => {\r\n    const options = {\r\n      method: \"GET\",\r\n      url: \"https://anime-db.p.rapidapi.com/anime\",\r\n      params: {\r\n        page: \"1\",\r\n        size: \"10\",\r\n        sortBy: \"ranking\",\r\n        sortOrder: \"asc\" ,\r\n        ...params,\r\n      },\r\n      headers: {\r\n        \"X-RapidAPI-Key\": \"37cb7c6b14msh0e4bfef14681545p11e89cjsn78cd09bd4f7e\",\r\n        \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n      },\r\n    };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n      getAnimes(category.title, category.params);\r\n    });\r\n  }, []);*/\r\n\r\n  return (\r\n    <>\r\n      {animeData.length > 0 ? (\r\n        <div class=\"container--animeRow\">\r\n        {animeCategories.map((category) => (\r\n          <AnimeRow\r\n            key={category.title}\r\n            title={category.title}\r\n            data={animeData[category.title] || []}\r\n          />\r\n        ))}\r\n      </div>\r\n      ) : (\r\n        <p>Loading anime...</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n\r\n/*\r\n{animeCategories.map((category) => (\r\n        <AnimeRow\r\n          key={category.title}\r\n          title={category.title}\r\n          data={animeData[category.title]|| []}\r\n        />\r\n      ))}\r\n*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}