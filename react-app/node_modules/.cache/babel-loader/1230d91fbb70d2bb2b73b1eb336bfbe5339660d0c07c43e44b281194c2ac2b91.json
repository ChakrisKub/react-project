{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\AnimeRow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Carousel } from \"react-responsive-carousel\";\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AnimeRow({}) {\n  _s();\n  const [images, setImages] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    // Fetch images from your API\n    axios.get('https://anime-db.p.rapidapi.com/anime/').then(response => {\n      setImages(response.data);\n    }).catch(error => {\n      console.error('Error fetching images:', error);\n    });\n  }, []);\n  const prevSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === 0 ? images.length - 1 : prevIndex - 1);\n  };\n  const nextSlide = () => {\n    setCurrentIndex(prevIndex => prevIndex === images.length - 1 ? 0 : prevIndex + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"container--animeRow--anime\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-angle-left\",\n        onClick: prevSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Anime Hot Hit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container--animeRow--anime--list\",\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          selectedItem: currentIndex,\n          showThumbs: false,\n          showStatus: false,\n          showIndicators: false,\n          infiniteLoop: true,\n          children: images.map((imageUrl, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: imageUrl,\n              alt: `Image ${index}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"fa-solid fa-angle-right\",\n        onClick: nextSlide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(AnimeRow, \"egAugckjpBOUv+M+WxVraX6X2eE=\");\n_c = AnimeRow;\nexport default AnimeRow;\nvar _c;\n$RefreshReg$(_c, \"AnimeRow\");","map":{"version":3,"names":["React","useState","useEffect","Carousel","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","AnimeRow","_s","images","setImages","currentIndex","setCurrentIndex","get","then","response","data","catch","error","console","prevSlide","prevIndex","length","nextSlide","children","class","onClick","fileName","_jsxFileName","lineNumber","columnNumber","selectedItem","showThumbs","showStatus","showIndicators","infiniteLoop","map","imageUrl","index","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/AnimeRow.js"],"sourcesContent":["import React, { useState, useEffect  } from \"react\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport axios from \"axios\";\r\n\r\nfunction AnimeRow({}) {\r\n    const [images, setImages] = useState([]);\r\n    const [currentIndex, setCurrentIndex] = useState(0);\r\n  \r\n    useEffect(() => {\r\n      // Fetch images from your API\r\n      axios.get('https://anime-db.p.rapidapi.com/anime/')\r\n        .then(response => {\r\n          setImages(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Error fetching images:', error);\r\n        });\r\n    }, []);\r\n\r\n  const prevSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex === 0 ? images.length - 1 : prevIndex - 1));\r\n  };\r\n\r\n  const nextSlide = () => {\r\n    setCurrentIndex((prevIndex) => (prevIndex === images.length - 1 ? 0 : prevIndex + 1));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"container--animeRow--anime\">\r\n        <i class=\"fa-solid fa-angle-left\" onClick={prevSlide}></i>\r\n        <h1>Anime Hot Hit</h1>\r\n\r\n        <div class=\"container--animeRow--anime--list\">\r\n          <Carousel\r\n            selectedItem={currentIndex}\r\n            showThumbs={false}\r\n            showStatus={false}\r\n            showIndicators={false}\r\n            infiniteLoop={true}\r\n          >\r\n            {images.map((imageUrl, index) => (\r\n              <div key={index}>\r\n                <img src={imageUrl} alt={`Image ${index}`} />\r\n              </div>\r\n            ))}\r\n          </Carousel>\r\n        </div>\r\n\r\n        <i class=\"fa-solid fa-angle-right\" onClick={nextSlide}></i>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AnimeRow;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}