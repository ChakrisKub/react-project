{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Windows10\\\\Documents\\\\GitHub\\\\react-project\\\\react-app\\\\src\\\\componants\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport AnimeRow from \"./AnimeRow\";\nimport AnimeTable from \"./AnimeTable\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Home() {\n  _s();\n  const [animeData, setAnimeData] = useState([]);\n  const animeCategories = [{\n    title: \"Hot hit\",\n    params: {\n      search: \"Summer\",\n      sortBy: \"ranking\",\n      sortOrder: \"asc\"\n    }\n  }, {\n    title: \"Treading\",\n    params: {\n      sortBy: \"ranking\",\n      sortOrder: \"desc\"\n    }\n  }, {\n    title: \"Summer Hit\",\n    params: {\n      search: \"Summer\",\n      sortBy: \"ranking\",\n      sortOrder: \"asc\"\n    }\n  }];\n  /*\r\n  { title: \"Summer Hit\", params: { search: \"Summer\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Winter Hit\", params: { search: \"Winter\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Autumn Hit\", params: { search: \"Autumn\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Fall Hit\", params: { search: \"Fall\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Top picks\", params: { search: \"Fight\", sortBy: \"ranking\", sortOrder: \"asc\" } },*/\n\n  /*useEffect(() => {\r\n  const options = {\r\n     method: \"GET\",\r\n     url: \"https://anime-db.p.rapidapi.com/anime\",\r\n     params: {\r\n       page: \"1\",\r\n       size: \"10\",\r\n       ...params,\r\n     },\r\n     headers: {\r\n       \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n       \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n     },\r\n   };\r\n   async function getAnimes() {\r\n   const animes = await axios.request(options);\r\n   console.log(animes.data);\r\n   setAnimeData(animes.data.data);\r\n  }\r\n  animeCategories.forEach((category) => {\r\n     getAnimes(category.title, category.params); \r\n   });\r\n  }, []);\r\n  */\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: animeCategories.map(category => /*#__PURE__*/_jsxDEV(AnimeRow, {\n      title: category.title,\n      data: animeData\n    }, category.title, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n}\n_s(Home, \"poB2Jp4HSNSBV/Ki5eKb7ASHmLI=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","AnimeRow","AnimeTable","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","_s","animeData","setAnimeData","animeCategories","title","params","search","sortBy","sortOrder","children","map","category","data","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Windows10/Documents/GitHub/react-project/react-app/src/componants/Home.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport AnimeRow from \"./AnimeRow\";\r\nimport AnimeTable from \"./AnimeTable\";\r\nimport axios from \"axios\";\r\n\r\nfunction Home() {\r\n  const [animeData, setAnimeData] = useState([]);\r\n  const animeCategories = [\r\n    { title: \"Hot hit\", params: { search: \"Summer\",sortBy: \"ranking\", sortOrder: \"asc\"} },\r\n    { title: \"Treading\", params: { sortBy: \"ranking\", sortOrder: \"desc\"} },\r\n    { title: \"Summer Hit\", params: { search: \"Summer\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n  ];\r\n  /*\r\n  { title: \"Summer Hit\", params: { search: \"Summer\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Winter Hit\", params: { search: \"Winter\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Autumn Hit\", params: { search: \"Autumn\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Fall Hit\", params: { search: \"Fall\", sortBy: \"ranking\", sortOrder: \"asc\" } },\r\n    { title: \"Top picks\", params: { search: \"Fight\", sortBy: \"ranking\", sortOrder: \"asc\" } },*/\r\n\r\n\r\n     /*useEffect(() => {\r\n    const options = {\r\n        method: \"GET\",\r\n        url: \"https://anime-db.p.rapidapi.com/anime\",\r\n        params: {\r\n          page: \"1\",\r\n          size: \"10\",\r\n          ...params,\r\n        },\r\n        headers: {\r\n          \"X-RapidAPI-Key\": \"f009e8294dmshaea6eeead8d70fcp14eed1jsn633681721e75\",\r\n          \"X-RapidAPI-Host\": \"anime-db.p.rapidapi.com\",\r\n        },\r\n      };\r\n\r\n    async function getAnimes() {\r\n      const animes = await axios.request(options);\r\n      console.log(animes.data);\r\n      setAnimeData(animes.data.data);\r\n    }\r\n    animeCategories.forEach((category) => {\r\n        getAnimes(category.title, category.params); \r\n      });\r\n  }, []);\r\n*/\r\n\r\n  return (\r\n    <>\r\n      {animeCategories.map((category) => (\r\n        <AnimeRow\r\n          key={category.title}\r\n          title={category.title}\r\n          data={animeData}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AACjC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAMa,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,SAAS;IAAEC,MAAM,EAAE;MAAEC,MAAM,EAAE,QAAQ;MAACC,MAAM,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAK;EAAE,CAAC,EACrF;IAAEJ,KAAK,EAAE,UAAU;IAAEC,MAAM,EAAE;MAAEE,MAAM,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAM;EAAE,CAAC,EACtE;IAAEJ,KAAK,EAAE,YAAY;IAAEC,MAAM,EAAE;MAAEC,MAAM,EAAE,QAAQ;MAAEC,MAAM,EAAE,SAAS;MAAEC,SAAS,EAAE;IAAM;EAAE,CAAC,CAC3F;EACD;AACF;AACA;AACA;AACA;AACA;;EAGK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;EAGE,oBACEZ,OAAA,CAAAE,SAAA;IAAAW,QAAA,EACGN,eAAe,CAACO,GAAG,CAAEC,QAAQ,iBAC5Bf,OAAA,CAACJ,QAAQ;MAEPY,KAAK,EAAEO,QAAQ,CAACP,KAAM;MACtBQ,IAAI,EAAEX;IAAU,GAFXU,QAAQ,CAACP,KAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGpB,CACF;EAAC,gBACF,CAAC;AAEP;AAAChB,EAAA,CApDQD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAqDb,eAAeA,IAAI;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}