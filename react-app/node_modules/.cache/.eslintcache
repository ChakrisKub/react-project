[{"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\App.js":"1","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\global.js":"2","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\index.js":"3","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\app\\store.js":"4","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\reducer.js":"5","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\GlobalStyle.js":"6","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Home.js":"7","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Slideshow.js":"8","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Genres.js":"9","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\NotFound.js":"10","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Navbar.js":"11","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Slide.js":"12","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Footer.js":"13","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Container.js":"14","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\TestSearch.js":"15","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\genresCase.js":"16","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Category.js":"17","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\showAnime\\AnimeTable.js":"18","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\showAnime\\AnimeRow.js":"19","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\actions.js":"20"},{"size":1198,"mtime":1693637031853,"results":"21","hashOfConfig":"22"},{"size":7700,"mtime":1693649936058,"results":"23","hashOfConfig":"22"},{"size":594,"mtime":1693641259140,"results":"24","hashOfConfig":"22"},{"size":186,"mtime":1693641132376,"results":"25","hashOfConfig":"22"},{"size":3815,"mtime":1693649351276,"results":"26","hashOfConfig":"22"},{"size":1042,"mtime":1693473283803,"results":"27","hashOfConfig":"22"},{"size":1044,"mtime":1693648398215,"results":"28","hashOfConfig":"22"},{"size":3402,"mtime":1693582657702,"results":"29","hashOfConfig":"22"},{"size":898,"mtime":1693560069553,"results":"30","hashOfConfig":"22"},{"size":1707,"mtime":1693413810815,"results":"31","hashOfConfig":"22"},{"size":2579,"mtime":1693473436137,"results":"32","hashOfConfig":"22"},{"size":8221,"mtime":1693591105196,"results":"33","hashOfConfig":"22"},{"size":602,"mtime":1693485819305,"results":"34","hashOfConfig":"22"},{"size":405,"mtime":1693556184688,"results":"35","hashOfConfig":"22"},{"size":1742,"mtime":1693553855068,"results":"36","hashOfConfig":"22"},{"size":461,"mtime":1693395624751,"results":"37","hashOfConfig":"22"},{"size":4498,"mtime":1693561956446,"results":"38","hashOfConfig":"22"},{"size":2587,"mtime":1693635450593,"results":"39","hashOfConfig":"22"},{"size":3981,"mtime":1693648360752,"results":"40","hashOfConfig":"22"},{"size":804,"mtime":1693649446651,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"n120u7",{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"46"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","suppressedMessages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"98","messages":"99","suppressedMessages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\App.js",["107"],[],"import React from \"react\";\r\nimport Home from \"./components/Home\";\r\nimport { Routes, Route, useLocation, Switch} from \"react-router-dom\";\r\nimport Genres from \"./components/Genres\";\r\nimport GlobalStyle from \"./GlobalStyle\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Slideshow from \"./components/Slideshow\";\r\nimport Container from \"./components/Container\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport Footer from \"./components/Footer\";\r\nimport TestSearch from \"./components/TestSearch\";\r\nimport Slide from \"./components/Slide\";\r\n\r\nfunction App() {\r\n  const location = useLocation();\r\n  const showSlideshow = !location.pathname.includes(\"/anime/\");\r\n\r\n  return (\r\n    <>\r\n      <GlobalStyle />\r\n      <Navbar />\r\n      <Container>\r\n       {showSlideshow && <Slideshow />}\r\n        <Routes>\r\n          <Route path=\"/\" element={<Home />} />\r\n          <Route path=\"/genres/:genreId\" element={<Genres />} />\r\n          <Route path=\"/testSearch\" element={<TestSearch />} />\r\n          <Route path=\"/anime/:id\" element={<Slide />} />\r\n          <Route path=\"*\" element={<NotFound/>} />\r\n        </Routes>\r\n      </Container>\r\n      <Footer />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n",[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\global.js",["108","109","110","111"],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\index.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\app\\store.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\reducer.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\GlobalStyle.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Home.js",[],[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Slideshow.js",["112"],[],"import React, { useState, useEffect } from 'react';\r\nimport styled, { keyframes } from 'styled-components';\r\n\r\n\r\n\r\nfunction Slideshow() {\r\n  const [slideIndex, setSlideIndex] = useState(1);\r\n  const [slideImages, setSlideImages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // Load all slide images from a directory (e.g., 'slideshow') dynamically\r\n    const context = require.context(\r\n      '/public/slideshow',\r\n      false,\r\n      /\\.(png|jpe?g|svg)$/\r\n    );\r\n    const images = context.keys().map(context);\r\n    setSlideImages(images);\r\n  }, []);\r\n\r\n  function plusSlides(n) {\r\n    let newIndex = slideIndex + n;\r\n    if (newIndex > slideImages.length) {\r\n      newIndex = 1;\r\n    } else if (newIndex < 1) {\r\n      newIndex = slideImages.length;\r\n    }\r\n    setSlideIndex(newIndex);\r\n  }\r\n\r\n  // Automatically advance to the next slide every 3 seconds\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      plusSlides(1);\r\n    }, 3000); // Change the duration here (in milliseconds) for the desired interval\r\n    return () => clearInterval(intervalId);\r\n  }, [slideIndex, plusSlides]); // Include plusSlides as a dependency\r\n\r\n  return (\r\n    <div>\r\n\r\n      <SlideshowContainer>\r\n      <SlideshowLogo src=\"/sharp-logo.png\" alt=\"img Logo\" />\r\n        {slideImages.map((imageSrc, index) => (\r\n          <MySlides\r\n            key={index}\r\n            style={slideIndex === index + 1 ? { display: 'block' } : {}}\r\n          >\r\n            <Img src={imageSrc} alt={`Slide ${index + 1}`} />\r\n            <SlideshowOverlay />\r\n          </MySlides>\r\n        ))}\r\n        <Prev onClick={() => plusSlides(-1)}>❮</Prev>\r\n        <Next onClick={() => plusSlides(1)}>❯</Next>\r\n      </SlideshowContainer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slideshow;\r\n\r\nconst SlideshowContainer = styled.div`\r\n \r\n  position: relative;\r\n  margin: auto;\r\n`;\r\n\r\nconst FadeAnimation = keyframes`\r\n  from {\r\n    opacity: 0.4;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst MySlides = styled.div`\r\n  display: none;\r\n  animation-name: ${FadeAnimation};\r\n  animation-duration: 1.5s;\r\n  width: 100%;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  vertical-align: middle;\r\n  width: 100%;\r\n  height: 625px;\r\n  object-fit: cover;\r\n  object-position: 100% 25%;\r\n  transition: all ease 1.5s;\r\n`;\r\n\r\nconst SlideshowOverlay = styled.div`\r\n  content: \"\";\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(to bottom, transparent 10%, black 90%);\r\n  opacity: 1;\r\n`;\r\n\r\n\r\nconst Prev = styled.a`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: auto;\r\n  padding: 16px;\r\n  margin-top: -22px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  transition: 0.6s ease;\r\n  border-radius: 0 3px 3px 0;\r\n  user-select: none;\r\n  left: 0;\r\n  border-radius: 3px 0 0 3px;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\n\r\nconst Next = styled.a`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 50%;\r\n  width: auto;\r\n  padding: 16px;\r\n  margin-top: -22px;\r\n  color: white;\r\n  font-weight: bold;\r\n  font-size: 18px;\r\n  transition: 0.6s ease;\r\n  border-radius: 0 3px 3px 0;\r\n  user-select: none;\r\n  right: 0;\r\n  border-radius: 3px 0 0 3px;\r\n\r\n  &:hover {\r\n    background-color: rgba(0, 0, 0, 0.8);\r\n  }\r\n`;\r\nconst SlideshowLogo = styled.img`\r\n  position: absolute;\r\n  top: 350px;\r\n  right: 630px;\r\n  object-fit: none;\r\n  z-index: 3;\r\n`;","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Genres.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\NotFound.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Navbar.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Slide.js",["113","114","115","116"],[],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled from \"styled-components\";\r\nimport { useGlobalContext } from \"../context/global\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport NotFound from \"./NotFound\";\r\n\r\nexport default function Slide() {\r\n  const { getAnimeDetails, animeDetails, loading } = useGlobalContext;\r\n  const { id } = useParams();\r\n  const [showMore, setShowMore] = useState(false);\r\n  const currentAnimeId = id;\r\n  const [error, setError] = useState(null);\r\n  const [anime, setAnime] = useState({\r\n    title: \"\",\r\n    image: \"\",\r\n    synopsis: \"\",\r\n    aired: \"\",\r\n    rating: \"\",\r\n    score: 0,\r\n    status: \"\",\r\n    episodes: 0,\r\n    duration: \"\",\r\n    season: \"\",\r\n    genres: \"\",\r\n    trailer: {},\r\n  });\r\n  // ใช้ useEffect เพื่อดึงข้อมูลอนิเมะเมื่อคอมโพเนนต์โหลด\r\n  useEffect(() => {\r\n    const fetchAnimeData = async () => {\r\n      const apiUrl = `https://api.jikan.moe/v4/anime/${currentAnimeId}/full`;\r\n\r\n      try {\r\n        const response = await axios.get(apiUrl); // ส่งคำขอ GET ไปยัง API\r\n        const animeData = response.data.data; // ข้อมูลอนิเมะที่ได้รับจาก API\r\n        setAnime({\r\n          title: animeData.title,\r\n          image: animeData.images.jpg.large_image_url,\r\n          synopsis: animeData.synopsis,\r\n          aired: animeData.aired?.string,\r\n          rating: animeData.rating,\r\n          score: animeData.score,\r\n          status: animeData.status,\r\n          episodes: animeData.episodes,\r\n          duration: animeData.duration,\r\n          season: animeData.season,\r\n          genres: animeData.genres.map((genre) => genre.name).join(\", \"),\r\n          trailer: animeData.trailer,\r\n        }); // อัปเดต state ด้วยข้อมูลอนิเมะ\r\n        console.log(animeData);\r\n      } catch (error) {\r\n        console.error(error);\r\n        setError(error);\r\n      }\r\n    };\r\n\r\n    fetchAnimeData(); // เรียกใช้ฟังก์ชันเมื่อคอมโพเนนต์โหลด\r\n  }, []); // [] คือ dependency array เปล่าๆ หมายถึงให้ useEffect ทำงานเมื่อคอมโพเนนต์โหลดครั้งเดียว\r\n\r\n  console.log(\"tr: \" + anime.trailer.youtube_id);\r\n\r\n  // ตรวจสอบว่าควรแสดงวิดีโอตัวอย่างหรือไม่\r\n  const shouldShowTrailer =\r\n    anime.trailer && anime.trailer.youtube_id && !anime.trailer.error;\r\n\r\n  if (error) {\r\n    return <NotFound />;\r\n  }\r\n  return (\r\n    <StyledSlide>\r\n      {shouldShowTrailer && (\r\n        <div className=\"trailer-container\">\r\n          <iframe\r\n            width=\"100%\"\r\n            height=\"500\"\r\n            src={`https://www.youtube.com/embed/${anime.trailer.youtube_id}?autoplay=1&loop=1&playlist=${anime.trailer.youtube_id}`}\r\n            title=\"Trailer Video\"\r\n            frameBorder=\"0\"\r\n            allowFullScreen\r\n          ></iframe>\r\n        </div>\r\n      )}\r\n\r\n      <div className=\"container\">\r\n        <div className=\"container--anime\">\r\n          <div className=\"container--anime--image\">\r\n            <img src={anime.image} alt={anime.title} />\r\n          </div>\r\n          <div className=\"container--anime--details\">\r\n            <div className=\"title\">\r\n              <h1>{anime.title}</h1>\r\n            </div>\r\n            <div className=\"synopsis\">\r\n              <p>\r\n                {showMore\r\n                  ? anime.synopsis?.substring(0, 270) + \"...\"\r\n                  : anime.synopsis}\r\n                <button onClick={() => setShowMore(!showMore)}>\r\n                  {showMore ? \"Read More\" : \"Show Less\"}\r\n                </button>\r\n              </p>\r\n            </div>\r\n            <div className=\"infomation\">\r\n              <ul>\r\n                <p>\r\n                  <b>Aired : </b> {anime.aired}\r\n                </p>\r\n                <p>\r\n                  <b>Rating : </b>\r\n                  {anime.rating}\r\n                </p>\r\n                <p>\r\n                  <b>Status : </b>\r\n                  {anime.status}\r\n                </p>\r\n                <p>\r\n                  <b>Score : </b>\r\n                  {anime.score}\r\n                </p>\r\n                <p>\r\n                  <b>Episodes : </b>\r\n                  {anime.episodes} episodes\r\n                </p>\r\n                <p>\r\n                  <b>Duration : </b>\r\n                  {anime.duration}\r\n                </p>\r\n                <p>\r\n                  <b>Season : </b>\r\n                  {anime.season}\r\n                </p>\r\n                <p>\r\n                  <b>Genres : </b>\r\n                  {anime.genres}\r\n                </p>\r\n                <p>\r\n                  <b>Rating : </b> ★★★★☆\r\n                </p>\r\n                <p>\r\n                  <img src=\"/sharp-logo.png\" alt=\"Sharp Logo\" />\r\n                </p>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </StyledSlide>\r\n  );\r\n}\r\n\r\nconst StyledSlide = styled.div`\r\n  /*anime details*/\r\n  .container--anime {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n    background: linear-gradient(to bottom, #f7a6b9 -20%, black 50%);\r\n    height: 600px;\r\n    padding: 0 50px 0 50px;\r\n  }\r\n  .container--anime--image {\r\n    width: 40%;\r\n    height: 500px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n  .container--anime--image img {\r\n    --c: #f7a6b9; /* สีขอบ */\r\n    --b: 10px; /* ความหนาขอบ */\r\n    --g: 5px; /* ช่องว่างเมื่อโฮเวอร์ */\r\n    --_g: #0000 25%, var(--c) 0;\r\n    width: 420px;\r\n    height: 594px;\r\n    transform: scale(1);\r\n    transition: all ease 0.2s;\r\n    border-radius: 5px;\r\n    object-fit: cover;\r\n    object-position: 100% 30%;\r\n    cursor: pointer;\r\n    padding: calc(var(--g) + var(--b));\r\n    background: conic-gradient(\r\n          from 180deg at top var(--b) right var(--b),\r\n          var(--_g)\r\n        )\r\n        var(--_i, 200%) 0 / 200% var(--_i, var(--b)) no-repeat,\r\n      conic-gradient(at bottom var(--b) left var(--b), var(--_g)) 0\r\n        var(--_i, 200%) / var(--_i, var(--b)) 200% no-repeat;\r\n    transition: 0.3s, background-position 0.3s 0.3s;\r\n  }\r\n  .container--anime--image img:hover {\r\n    --_i: 100%;\r\n    transition: 0.3s, background-size 0.3s 0.3s;\r\n  }\r\n\r\n  .container--anime--details {\r\n    color: #fff;\r\n    background-color: transparent;\r\n    width: 60%;\r\n    height: 500px;\r\n  }\r\n  .container--anime--details .infomation {\r\n    display: flex;\r\n    flex-direction: column;\r\n    padding: 0 30px 0 30px;\r\n  }\r\n  .container--anime--details .title {\r\n    color: #f7a6b9;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    list-style: none;\r\n    background-color: transparent;\r\n  }\r\n  .container--anime--details .title {\r\n    padding: 0 10px 0 10px;\r\n    font-size: 16px;\r\n  }\r\n  .container--anime--details .synopsis {\r\n    text-align: left;\r\n    font-size: 16px;\r\n    padding: 30px;\r\n  }\r\n\r\n  .container--anime--details .synopsis button {\r\n    background-color: transparent;\r\n    border: none;\r\n    outline: none;\r\n    cursor: pointer;\r\n    font-weight: 600;\r\n    color: #f7a6b9;\r\n  }\r\n\r\n  .container--anime--details .infomation {\r\n    text-align: left;\r\n    font-size: 16px;\r\n  }\r\n  .container--anime--details .infomation b {\r\n    color: #f7a6b9;\r\n  }\r\n\r\n  .infomation ul {\r\n    display: grid;\r\n    grid-template-columns: repeat(2, 1fr);\r\n    list-style: none;\r\n    padding: 0;\r\n  }\r\n  .infomation ul img {\r\n    width: 250px;\r\n    float: right;\r\n  }\r\n  .container--anime--details .rating {\r\n    display: flex;\r\n    flex-direction: row;\r\n    margin: 0 30px 0 30px;\r\n    align-items: center;\r\n  }\r\n  .container--anime--details .rating p {\r\n    padding-top: 10px;\r\n  }\r\n  .container--anime--details .rating-star {\r\n    padding-left: 20px;\r\n    font-size: 30px;\r\n    color: #f7a6b9;\r\n  }\r\n`;","C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Footer.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Container.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\TestSearch.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\genresCase.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\Category.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\showAnime\\AnimeTable.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\components\\showAnime\\AnimeRow.js",[],[],"C:\\Users\\Windows10\\Documents\\GitHub\\react-project\\react-app\\src\\context\\actions.js",[],[],{"ruleId":"117","severity":1,"message":"118","line":3,"column":38,"nodeType":"119","messageId":"120","endLine":3,"endColumn":44},{"ruleId":"117","severity":1,"message":"121","line":1,"column":44,"nodeType":"119","messageId":"120","endLine":1,"endColumn":54},{"ruleId":"117","severity":1,"message":"122","line":4,"column":8,"nodeType":"119","messageId":"120","endLine":4,"endColumn":20},{"ruleId":"117","severity":1,"message":"123","line":60,"column":9,"nodeType":"119","messageId":"120","endLine":60,"endColumn":17},{"ruleId":"124","severity":1,"message":"125","line":209,"column":6,"nodeType":"126","endLine":209,"endColumn":8,"suggestions":"127"},{"ruleId":"124","severity":1,"message":"128","line":21,"column":3,"nodeType":"129","endLine":29,"endColumn":4},{"ruleId":"117","severity":1,"message":"130","line":9,"column":11,"nodeType":"119","messageId":"120","endLine":9,"endColumn":26},{"ruleId":"117","severity":1,"message":"131","line":9,"column":28,"nodeType":"119","messageId":"120","endLine":9,"endColumn":40},{"ruleId":"117","severity":1,"message":"132","line":9,"column":42,"nodeType":"119","messageId":"120","endLine":9,"endColumn":49},{"ruleId":"124","severity":1,"message":"133","line":58,"column":6,"nodeType":"126","endLine":58,"endColumn":8,"suggestions":"134"},"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'useReducer' is defined but never used.","'animeReducer' is defined but never used.","'isSearch' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getAiringAnime', 'getFallAnime', 'getNowAnime', 'getPopularAnime', 'getSpringAnime', 'getSummerAnime', 'getUpcomingAnime', and 'getWinterAnime'. Either include them or remove the dependency array.","ArrayExpression",["135"],"The 'plusSlides' function makes the dependencies of useEffect Hook (at line 37) change on every render. To fix this, wrap the definition of 'plusSlides' in its own useCallback() Hook.","FunctionDeclaration","'getAnimeDetails' is assigned a value but never used.","'animeDetails' is assigned a value but never used.","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'currentAnimeId'. Either include it or remove the dependency array.",["136"],{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [getAiringAnime, getFallAnime, getNowAnime, getPopularAnime, getSpringAnime, getSummerAnime, getUpcomingAnime, getWinterAnime]",{"range":"141","text":"142"},"Update the dependencies array to be: [currentAnimeId]",{"range":"143","text":"144"},[6767,6769],"[getAiringAnime, getFallAnime, getNowAnime, getPopularAnime, getSpringAnime, getSummerAnime, getUpcomingAnime, getWinterAnime]",[1935,1937],"[currentAnimeId]"]